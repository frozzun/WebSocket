services:
  websocket:
#    build:
#      context: .
#      dockerfile: Dockerfile
    container_name: backend
    image: frozzun99/websocket:latest
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
      SPRING_DATASOURCE_URL: ${MYSQL_URL}
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
      SPRING_DATA_MONGODB_URI: ${MONGO_URI}
      SPRING_DATA_MONGODB_USERNAME: ${MONGO_USERNAME}
      SPRING_DATA_MONGODB_PASSWORD: ${MONGO_PASSWORD}
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-network

  mysql:
    hostname: mysql
    container_name: mysql
    image: mysql:latest
    env_file:
      - .env
    ports:
      - "3306:3306"
    volumes:
      - db_mysql:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql  # init.sql 파일 매핑
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "--silent" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    networks:
      - app-network

  redis:
    container_name: redis
    image: redis:latest
    hostname: redis
    ports:
      - "6379:6379"
    volumes:
      - db_redis:/data
    #      - ./redis/conf/redis.conf:/usr/local/conf/redis.conf
    #    labels:
    #      - "name=redis"
    #      - "mode=standalone"
    restart: always
    #    command: redis-server /usr/local/conf/redis.conf
    networks:
      - app-network

#  mongo:
#    container_name: mongo
#    image: mongo:latest
#    ports:
#      - "27017:27017"
#    volumes:
#      - db_mongo:/data/db
#    environment:
#      MONGO_INITDB_ROOT_USERNAME: lawmon
#      MONGO_INITDB_ROOT_PASSWORD: qwer
#    restart: always

volumes:
  db_mysql:
  db_redis:
#  db_mongo:


networks:
  app-network:
    driver: bridge